<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Coupon Management</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <style>
    .form-error {
      min-height: 1.25rem; /* Reserve space for one line of error text */
      font-size: 0.75rem;   /* Tailwind's text-xs */
      color: #dc2626;       /* Tailwind's text-red-600 */
      visibility: hidden;
    }
  
    .form-error.visible {
      visibility: visible;
    }
  </style>
</head>
<body class="bg-gray-100 text-gray-800 min-h-screen p-6">
  <%- include('partials/sidebar') %>
  <div class="max-w-7xl mx-auto">
    <div class="flex justify-between items-center mb-6">
      <h1 class="text-2xl font-bold">Coupon Management</h1>
      <button onclick="document.getElementById('couponModal').classList.remove('hidden')" class="bg-black text-white px-4 py-2 rounded hover:bg-gray-900">
        + Add New Coupon
      </button>
    </div>

    <div class="flex flex-col sm:flex-row justify-between items-center gap-4 mb-4">
      <form id="couponSearchForm" class="flex items-center gap-2 relative" onsubmit="return false;">
        <input
          id="couponSearchInput"
          type="text"
          name="search"
       
          placeholder="Search coupon..."
          class="px-3 py-2 border rounded-lg w-full md:w-72 focus:outline-none focus:ring focus:border-blue-400"
          autocomplete="off"
        />
        <button
        type="button"
        id="clearSearchBtn"
        class="absolute right-20 md:right-24 top-1/2 -translate-y-1/2 text-gray-400 hover:text-gray-700 text-lg px-2 focus:outline-none"
        style="display: none;"
        tabindex="-1"
        aria-label="Clear search"
      >
        &times;
      </button>
        <button type="submit" class="bg-black text-white px-4 py-2 rounded-lg hover:bg-gray-800 transition">
          Search
        </button>
      </form>
      <div class="flex items-center gap-2">
      
        <select class="border px-3 py-2 rounded">
          <option>All Status</option>
          <option>Active</option>
          <option>Expired</option>
        </select>
      </div>
    </div>

    <div class="overflow-x-auto bg-white rounded shadow">
      <table class="min-w-full text-sm text-left">
        <thead class="bg-gray-50 border-b">
          <tr>
            <th class="px-4 py-3">CODE</th>
            <th class="px-4 py-3">TYPE</th>
            <th class="px-4 py-3">VALUE</th>
            <th class="px-4 py-3">MIN AMOUNT</th>
            <th class="px-4 py-3">VALID PERIOD</th>
            <th class="px-4 py-3">STATUS</th>
            <th class="px-4 py-3">ACTIONS</th>
          </tr>
        </thead>
        <!-- <tbody>
          <% if (coupons && coupons.length > 0) { %>
            <% coupons.forEach(function(coupon) { %>
              <tr class="hover:bg-gray-50" data-coupon-id="<%= coupon._id %>">
                <td class="px-4 py-3"><%= coupon.code %></td>
                <td class="px-4 py-3"><%= coupon.discountType === 'percentage' ? 'Percentage' : 'Fixed' %></td>
                <td class="px-4 py-3"><%= coupon.discountValue %></td>
                <td class="px-4 py-3">â‚¹<%= coupon.minOrderAmount %></td>
                <td class="px-4 py-3">
                  <%= coupon.startDate ? new Date(coupon.startDate).toLocaleDateString('en-IN', { year: 'numeric', month: 'short', day: 'numeric' }) : '-' %>
                  -
                  <%= coupon.endDate ? new Date(coupon.endDate).toLocaleDateString('en-IN', { year: 'numeric', month: 'short', day: 'numeric' }) : '-' %>
                </td>
                <td class="px-4 py-3 coupon-status">
                  <%
                    let status = '';
                    let statusClass = '';
                    if (coupon.isExpired) {
                      status = 'Expired';
                      statusClass = 'bg-gray-100 text-gray-700';
                    } else if (!coupon.isActive) {
                      status = 'Inactive';
                      statusClass = 'bg-red-100 text-red-700';
                    } else if (new Date() < new Date(coupon.startDate)) {
                      status = 'Scheduled';
                      statusClass = 'bg-yellow-100 text-yellow-700';
                    } else {
                      status = 'Active';
                      statusClass = 'bg-green-100 text-green-700';
                    }
                  %>
                  <span class="<%= statusClass %> px-2 py-1 rounded text-xs font-semibold">
                    <%= status %>
                  </span>
                </td>
                <td class="px-4 py-3 flex items-center gap-3">
              
                  <button 
                  title="Edit" 
                  class="text-blue-600 hover:text-blue-800 focus:outline-none edit-coupon-btn"
                  data-coupon='<%- JSON.stringify(coupon).replace(/'/g, "&apos;") %>'
                >
                  <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                    <path stroke-linecap="round" stroke-linejoin="round" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5M18.5 2.5a2.121 2.121 0 113 3L12 15l-4 1 1-4 9.5-9.5z" />
                  </svg>
                </button>
                <input type="hidden" id="updateCouponId" name="couponId" />
           
                  <label class="relative inline-flex items-center cursor-pointer <%= coupon.isExpired ? 'opacity-50 cursor-not-allowed' : '' %>">
                    <input type="checkbox" class="sr-only peer"
                      <%= coupon.isActive ? 'checked' : '' %>
                      <%= coupon.isExpired ? 'disabled' : '' %>
                      onchange="toggleCouponStatus('<%= coupon._id %>', this.checked)">
                    
                    <div class="w-10 h-5 bg-gray-200 rounded-full peer peer-checked:bg-green-500 transition-all duration-200"></div>
                    <div class="absolute left-0.5 top-0.5 w-4 h-4 bg-white rounded-full shadow transition-all duration-200 peer-checked:translate-x-5"></div>
                  </label>
                  
                </td>
              </tr>
            <% }) %>
          <% } else { %>
            <tr>
              <td colspan="7" class="text-center py-8 text-gray-500">No coupons are available</td>
            </tr>
          <% } %>
        </tbody> -->
        <tbody></tbody>
      </table>
    </div>

    <div id="couponPagination" class="flex justify-center mt-6"></div>
  </div>


  <div id="couponModal" class="fixed inset-0 bg-black bg-opacity-40 flex justify-center items-center hidden z-50">
    <div class="bg-white p-6 rounded-md w-full max-w-md relative">
      <h2 class="text-xl font-semibold mb-4">Add New Coupon</h2>
  
      <!-- Close Button -->
      <button onclick="document.getElementById('couponModal').classList.add('hidden')"
        class="absolute top-2 right-2 text-gray-600 hover:text-black text-xl">&times;</button>
  
      <!-- Form -->
      <form id="addCouponForm" autocomplete="off">
        <div class="mb-4 flex gap-2">
          <input type="text" id="couponCode" name="code" placeholder="Coupon Code" class="w-full px-4 py-2 border rounded-md"  />
          <button type="button" onclick="generateCouponCode()" class="px-4 py-2 bg-gray-200 rounded-md">Generate</button>
          
        </div>
        <div id="error-code" class="text-red-600 text-xs mb-2"></div>
        <div class="mb-4">
          <select id="discountType" name="discountType" class="w-full px-4 py-2 border rounded-md" >
            <option value="">Select Type</option>
            <option value="percentage">Percentage</option>
            <option value="fixed">Fixed Amount</option>
          </select>
          
          <div id="error-discountType" class="text-red-600 text-xs mb-2"></div>
        </div>
        <input type="number" id="discountValue" name="discountValue" placeholder="Discount Value"  class="w-full mb-4 px-4 py-2 border rounded-md"  />
        <div id="error-discountValue" class="text-red-600 text-xs mb-2"></div>
        <input type="number" id="minOrderAmount" name="minOrderAmount" placeholder="Minimum Order Amount" min="0" class="w-full mb-4 px-4 py-2 border rounded-md"  />
        <div id="error-minOrderAmount" class="text-red-600 text-xs mb-2"></div>
        <input type="number" id="maxOrderAmount" name="maxOrderAmount" placeholder="Maximum Order Amount" min="0" class="w-full mb-4 px-4 py-2 border rounded-md"  />
        <div id="error-maxOrderAmount" class="text-red-600 text-xs mb-2"></div>
        <textarea id="description" name="description" placeholder="Coupon Description" class="w-full mb-4 px-4 py-2 border rounded-md" ></textarea>
        <div id="error-description" class="text-red-600 text-xs mb-2"></div>
        <div class="mb-4 flex gap-2">
          <input type="date" id="startDate" name="startDate" class="w-full px-4 py-2 border rounded-md"  />
          <input type="date" id="endDate" name="endDate" class="w-full px-4 py-2 border rounded-md"  />
          <!-- <div id="error-endDate" class="text-red-600 text-xs mb-2"></div> -->
        </div>
        <div id="error-startDate" class="text-red-600 text-xs mb-2"></div>
      
        <div id="couponError" class="text-red-600 text-sm mb-2 hidden"></div>
        <div class="flex justify-end gap-2">
          <button type="button" onclick="document.getElementById('couponModal').classList.add('hidden')"
            class="px-4 py-2 bg-gray-200 rounded-md">Cancel</button>
          <button type="submit" class="px-4 py-2 bg-black text-white rounded-md">Create Coupon</button>
        </div>
      </form>
    </div>
  </div>

  <div id="updateCouponModal" class="fixed inset-0 bg-black bg-opacity-40 flex justify-center items-center hidden z-50">
    <div class="bg-white p-6 rounded-md w-full max-w-md relative">
      <h2 class="text-xl font-semibold mb-4">Update Coupon</h2>
  
      <!-- Close Button -->
      <button onclick="document.getElementById('updateCouponModal').classList.add('hidden')"
        class="absolute top-2 right-2 text-gray-600 hover:text-black text-xl">&times;</button>
  
      <!-- Form -->
      <form id="updateCouponForm" autocomplete="off">
        <div class="mb-4 flex gap-2">
          <input type="text" id="updateCouponCode" name="code" placeholder="Coupon Code" class="w-full px-4 py-2 border rounded-md" readonly />
        </div>
        <div id="error-update-code" class="text-red-600 text-xs mb-2"></div>
  
        <div class="mb-4">
          <select id="updateDiscountType" name="discountType" class="w-full px-4 py-2 border rounded-md">
            <option value="">Select Type</option>
            <option value="percentage">Percentage</option>
            <option value="fixed">Fixed Amount</option>
          </select>
          <div id="error-update-discountType" class="text-red-600 text-xs mb-2"></div>
        </div>
  
        <input type="number" id="updateDiscountValue" name="discountValue" placeholder="Discount Value" min="1" class="w-full mb-4 px-4 py-2 border rounded-md" />
        <div id="error-update-discountValue" class="text-red-600 text-xs mb-2"></div>
  
        <input type="number" id="updateMinOrderAmount" name="minOrderAmount" placeholder="Minimum Order Amount" min="0" class="w-full mb-4 px-4 py-2 border rounded-md" />
        <div id="error-update-minOrderAmount" class="text-red-600 text-xs mb-2"></div>
  
        <input type="number" id="updateMaxOrderAmount" name="maxOrderAmount" placeholder="Maximum Order Amount" min="0" class="w-full mb-4 px-4 py-2 border rounded-md" />
        <div id="error-update-maxOrderAmount" class="text-red-600 text-xs mb-2"></div>
  
        <textarea id="updateDescription" name="description" placeholder="Coupon Description" class="w-full mb-4 px-4 py-2 border rounded-md"></textarea>
        <div id="error-update-description" class="text-red-600 text-xs mb-2"></div>
  
        <div class="mb-4 flex gap-2">
          <input type="date" id="updateStartDate" name="startDate" class="w-full px-4 py-2 border rounded-md" />
          <input type="date" id="updateEndDate" name="endDate" class="w-full px-4 py-2 border rounded-md" />
        </div>
        <div id="error-update-startDate" class="text-red-600 text-xs mb-2"></div>
  
        <div id="updateCouponError" class="text-red-600 text-sm mb-2 hidden"></div>
  
        <div class="flex justify-end gap-2">
          <button type="button" onclick="document.getElementById('updateCouponModal').classList.add('hidden')"
            class="px-4 py-2 bg-gray-200 rounded-md">Cancel</button>
          <button type="submit" class="px-4 py-2 bg-black text-white rounded-md">Update Coupon</button>
        </div>
      </form>
    </div>
  </div>
  

  <div id="toast" class="fixed top-6 right-6 bg-green-600 text-white px-6 py-3 rounded shadow-lg z-50 hidden"></div>
  <script src="/js/Coupon.js"></script>
  <script>
    document.addEventListener('DOMContentLoaded', () => {
      const couponTableBody = document.querySelector('tbody');
      const searchInput = document.getElementById('couponSearchInput');
      const clearBtn = document.getElementById('clearSearchBtn');
      const searchForm = document.getElementById('couponSearchForm');
      const statusFilter = document.querySelector('select');
      const paginationDiv = document.getElementById('couponPagination');
      const limit = 5;
    
      let currentSearch = '';
      let currentStatus = '';
      let currentPage = 1;
    
      // Show/hide clear button as user types
      searchInput.addEventListener('input', function () {
        clearBtn.style.display = this.value ? 'block' : 'none';
      });
      if (searchInput.value) clearBtn.style.display = 'block';
    
      // Status filter
      statusFilter.addEventListener('change', function () {
        currentStatus = this.value === 'All Status' ? '' : this.value.toLowerCase();
        fetchCoupons(currentSearch, 1, currentStatus);
      });
    
      // Search submit
      searchForm.addEventListener('submit', function(e) {
        e.preventDefault();
        currentSearch = searchInput.value.trim();
        fetchCoupons(currentSearch, 1, currentStatus);
        clearBtn.style.display = searchInput.value ? 'block' : 'none';
      });
    
      // Clear button
      clearBtn.addEventListener('click', function () {
        searchInput.value = '';
        currentSearch = '';
        fetchCoupons('', 1, currentStatus);
        clearBtn.style.display = 'none';
      });
    
      // Render coupons table
      function renderCoupons(coupons) {
        couponTableBody.innerHTML = '';
        if (!coupons.length) {
          couponTableBody.innerHTML = `
            <tr>
              <td colspan="7" class="text-center py-8 text-gray-500">No coupons are available</td>
            </tr>
          `;
          return;
        }
        coupons.forEach(coupon => {
  let status = '';
  let statusClass = '';
  const now = new Date();
  const startDate = new Date(coupon.startDate);
  const endDate = new Date(coupon.endDate);

  let disableToggle = false;

  if (coupon.isExpired) {
    status = 'Expired';
    statusClass = 'bg-gray-100 text-gray-700';
    disableToggle = true;
  } else if (now < startDate) {
    status = 'Scheduled';
    statusClass = 'bg-blue-100 text-blue-700';
    disableToggle = true;
  } else if (coupon.isActive) {
    status = 'Active';
    statusClass = 'bg-green-100 text-green-700';
  } else {
    status = 'Inactive';
    statusClass = 'bg-red-100 text-red-700';
  }

  couponTableBody.innerHTML += `
    <tr class="hover:bg-gray-50" data-coupon-id="${coupon._id}">
      <td class="px-4 py-3">${coupon.code}</td>
      <td class="px-4 py-3">${coupon.discountType === 'percentage' ? 'Percentage' : 'Fixed'}</td>
      <td class="px-4 py-3">${coupon.discountValue}</td>
      <td class="px-4 py-3">â‚¹${coupon.minOrderAmount}</td>
      <td class="px-4 py-3">
        ${coupon.startDate ? new Date(coupon.startDate).toLocaleDateString('en-IN', { year: 'numeric', month: 'short', day: 'numeric' }) : '-'}
        -
        ${coupon.endDate ? new Date(coupon.endDate).toLocaleDateString('en-IN', { year: 'numeric', month: 'short', day: 'numeric' }) : '-'}
      </td>
      <td class="px-4 py-3 coupon-status">
        <span class="${statusClass} px-2 py-1 rounded text-xs font-semibold">${status}</span>
      </td>
      <td class="px-4 py-3 flex items-center gap-3">
        <button 
          title="Edit" 
          class="text-blue-600 hover:text-blue-800 focus:outline-none edit-coupon-btn"
          data-coupon='${JSON.stringify(coupon).replace(/'/g, "&apos;")}'
        >
          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
            <path stroke-linecap="round" stroke-linejoin="round" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5M18.5 2.5a2.121 2.121 0 113 3L12 15l-4 1 1-4 9.5-9.5z" />
          </svg>
        </button>
        <input type="hidden" id="updateCouponId" name="couponId" />
        <label class="relative inline-flex items-center cursor-pointer ${disableToggle ? 'opacity-50 cursor-not-allowed' : ''}">
          <input type="checkbox" class="sr-only peer"
            ${coupon.isActive ? 'checked' : ''}
            ${disableToggle ? 'disabled' : ''}
            onchange="toggleCouponStatus('${coupon._id}', this.checked)">
          <div class="w-10 h-5 bg-gray-200 rounded-full peer peer-checked:bg-green-500 transition-all duration-200"></div>
          <div class="absolute left-0.5 top-0.5 w-4 h-4 bg-white rounded-full shadow transition-all duration-200 peer-checked:translate-x-5"></div>
        </label>
      </td>
    </tr>
  `;
});

        attachEditCouponListeners();
      }
    
      // Render pagination
      function renderPagination(totalPages, currentPage) {
        let html = '';
        if (totalPages <= 1) {
          paginationDiv.innerHTML = '';
          return;
        }
        if (currentPage > 1) {
          html += `<button class="px-3 py-1 border rounded bg-white hover:bg-gray-100 text-gray-700" data-page="${currentPage - 1}">Previous</button>`;
        }
        for (let i = 1; i <= totalPages; i++) {
          html += `<button class="px-3 py-1 border rounded ${i === currentPage ? 'bg-blue-500 text-white' : 'bg-white hover:bg-gray-100 text-gray-700'}" data-page="${i}">${i}</button>`;
        }
        if (currentPage < totalPages) {
          html += `<button class="px-3 py-1 border rounded bg-white hover:bg-gray-100 text-gray-700" data-page="${currentPage + 1}">Next</button>`;
        }
        paginationDiv.innerHTML = html;
        paginationDiv.querySelectorAll('button[data-page]').forEach(btn => {
          btn.onclick = () => {
            fetchCoupons(currentSearch, parseInt(btn.getAttribute('data-page')), currentStatus);
          };
        });
      }
    
      // Attach edit-coupon listeners
      function attachEditCouponListeners() {
        document.querySelectorAll('.edit-coupon-btn').forEach(btn => {
          btn.onclick = function () {
            const coupon = JSON.parse(this.dataset.coupon.replace(/&apos;/g, "'"));
            document.getElementById('updateCouponId').value = coupon._id || '';
            document.getElementById('updateCouponCode').value = coupon.code || '';
            document.getElementById('updateDiscountType').value = coupon.discountType || '';
            document.getElementById('updateDiscountValue').value = coupon.discountValue || '';
            document.getElementById('updateMinOrderAmount').value = coupon.minOrderAmount || '';
            document.getElementById('updateMaxOrderAmount').value = coupon.maxOrderAmount || '';
            document.getElementById('updateDescription').value = coupon.description || '';
            document.getElementById('updateStartDate').value = coupon.startDate ? coupon.startDate.slice(0,10) : '';
            document.getElementById('updateEndDate').value = coupon.endDate ? coupon.endDate.slice(0,10) : '';
            document.getElementById('updateCouponModal').classList.remove('hidden');
          };
        });
      }
    
      // Fetch coupons from backend
      async function fetchCoupons(search = '', page = 1, status = '') {
        const res = await fetch(`/admin/coupons/api?search=${encodeURIComponent(search)}&page=${page}&limit=${limit}&status=${encodeURIComponent(status)}`);
        const data = await res.json();
        renderCoupons(data.coupons);
        renderPagination(data.totalPages, data.currentPage);
        currentPage = data.currentPage;
      }
    
      // Initial load (show all coupons)
      fetchCoupons('', 1, '');
    });
    </script>
</body>
</html>
