<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Sales Report</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.13/cropper.min.css">
  <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.13/cropper.min.js"></script>
  <style>
    body {
      font-family: 'Inter', sans-serif;
    }
    .toast-msg {
  background: #fee2e2;
  color: #b91c1c;
  border: 1px solid #fca5a5;
  padding: 12px 20px;
  margin-bottom: 10px;
  border-radius: 6px;
  min-width: 200px;
  box-shadow: 0 2px 8px rgba(0,0,0,0.05);
  font-weight: 500;
  animation: fadein 0.3s;
}
@keyframes fadein {
  from { opacity: 0; transform: translateY(-10px);}
  to { opacity: 1; transform: translateY(0);}
}
  </style>
</head>
<body class="bg-gray-50 text-gray-800 p-6">
    <%- include('partials/sidebar') %>
  <div class="max-w-7xl mx-auto space-y-6">
    <!-- Header -->
    <div>
      <h1 class="text-3xl font-extrabold">ðŸ“Š Sales Report</h1>
      <p class="text-gray-500 text-sm">View and analyze your sales data</p>
    </div>

    <!-- Actions & Filters -->
    <div class="flex flex-wrap items-center gap-4">
      <button id="downloadPdfBtn" class="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg shadow-sm">
        Download PDF
      </button>
      <button id="downloadExcelBtn" class="bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded-lg shadow-sm">
        Download Excel
      </button>
    </div>
    <div class="flex flex-wrap items-center gap-4">
        <button onclick="applyFilter('daily')" class="bg-gray-200 hover:bg-gray-300 text-sm px-3 py-1 rounded-md">Daily</button>
        <button onclick="applyFilter('weekly')" class="bg-gray-200 hover:bg-gray-300 text-sm px-3 py-1 rounded-md">Weekly</button>
        <button onclick="applyFilter('yearly')" class="bg-gray-200 hover:bg-gray-300 text-sm px-3 py-1 rounded-md">Yearly</button>
        <input type="date" id="fromDate" class="border rounded-md px-3 py-1 text-sm" />
        <span class="text-sm">to</span>
        <input type="date" id="toDate" class="border rounded-md px-3 py-1 text-sm" />
        <button onclick="applyFilter('custom')" class="bg-black text-white px-3 py-1 rounded-md hover:bg-gray-900 text-sm">Custom</button>
      </div>

    <!-- Metrics Cards -->
    <div class="grid grid-cols-1 sm:grid-cols-3 gap-6">
      <div class="bg-white rounded-xl shadow-md p-5 text-center border border-gray-100">
        <h2 class="text-sm text-gray-500 mb-1">Total Sales</h2>
        <p class="text-2xl font-bold text-blue-600">â‚¹<%= totalSales.toLocaleString('en-IN') %></p>

      </div>
      <div class="bg-white rounded-xl shadow-md p-5 text-center border border-gray-100">
        <h2 class="text-sm text-gray-500 mb-1">Total Orders</h2>
        <p class="text-2xl font-bold text-green-600"><%=totalOrders%></p>
      </div>
      <div class="bg-white rounded-xl shadow-md p-5 text-center border border-gray-100">
        <h2 class="text-sm text-gray-500 mb-1">Total Discount</h2>
        <p class="text-2xl font-bold text-red-500">â‚¹<%=totalDiscount.toLocaleString('en-IN') %></p>
      </div>
    </div>

    <!-- Orders Table -->
    <div class="bg-white rounded-xl shadow-md border border-gray-100 p-6">
      <h3 class="text-lg font-semibold mb-4">ðŸ“¦ Orders</h3>
      <div class="overflow-x-auto">
        <table class="min-w-full border-collapse text-sm">
          <thead class="bg-gray-100 text-gray-600 uppercase text-xs">
            <tr>
              <th class="text-left py-3 px-4">Order ID</th>
              <th class="text-left py-3 px-4">Date</th>
              <th class="text-left py-3 px-4">Customer</th>
              <th class="text-left py-3 px-4">Total</th>
              <th class="text-left py-3 px-4">Status</th>
              <th class="text-left py-3 px-4">Coupon</th>
            </tr>
          </thead>
          <tbody id="orders-tbody" class="text-gray-700">
            <% if (allOrders.length > 0) { %>
              <% allOrders.forEach(order => { %>
                <tr class="border-b">
                  <td class="py-3 px-4"><%= order.orderId %></td>
                  <td class="py-3 px-4"><%= new Date(order.createdAt).toLocaleDateString('en-IN') %></td>
                  <td class="py-3 px-4"><%= order.userId?.name || 'Guest' %></td>
                  <td class="py-3 px-4">â‚¹<%= order.totalAmount.toLocaleString('en-IN') %></td>
                  <td class="py-3 px-4 capitalize">
                    <%=order.paymentStatus%>
                  </td>
                  <td class="py-3 px-4">
                    <% 
                      const hasCoupon = order.coupon && order.discount && order.discount > 0;
                      const hasOffer = order.offerDiscount && order.offerDiscount > 0;
                    %>
                    <% if (hasCoupon && hasOffer) { %>
                      <span class="font-semibold text-indigo-600"><%= order.coupon %></span>
                      <span class="ml-2 text-green-600 font-bold">-â‚¹<%= order.discount.toLocaleString('en-IN') %></span>
                      <span class="ml-2 text-yellow-600 font-bold">| Offer -â‚¹<%= order.offerDiscount.toLocaleString('en-IN') %></span>
                    <% } else if (hasCoupon) { %>
                      <span class="font-semibold text-indigo-600"><%= order.coupon %></span>
                      <span class="ml-2 text-green-600 font-bold">-â‚¹<%= order.discount.toLocaleString('en-IN') %></span>
                      <span class="ml-2 text-yellow-600">No Offer</span>
                    <% } else if (hasOffer) { %>
                      <span class="text-yellow-600 font-bold">Offer -â‚¹<%= order.offerDiscount.toLocaleString('en-IN') %></span>
                    <% } else { %>
                      No Discount
                    <% } %>
                  </td>
                </tr>
              <% }) %>
            <% } else { %>
              <tr>
                <td colspan="6" class="text-center py-6 text-gray-400">No orders found.</td>
              </tr>
            <% } %>
          </tbody>
          
          
        </table>

        <div id="toast-container" style="position:fixed;top:1rem;right:1rem;z-index:9999;"></div>
      </div>

  
    </div>
    <div class="flex justify-between items-center mt-6 text-sm text-gray-500">
        <span id="orders-summary">
          Showing <%= allOrders.length ? ((page - 1) * 10 + 1) : 0 %> to <%= ((page - 1) * 10) + allOrders.length %> of <%= totalOrders %> orders
        </span>
        <div class="flex gap-2" id="orders-pagination">
          <button onclick="fetchOrders(<%= page - 1 %>)" class="bg-gray-200 hover:bg-gray-300 text-gray-600 px-2 py-1 rounded" <%= page === 1 ? 'disabled' : '' %>>â€¹</button>
          <span>Page <%= page %> of <%= totalPages %></span>
          <button onclick="fetchOrders(<%= page + 1 %>)" class="bg-gray-200 hover:bg-gray-300 text-gray-600 px-2 py-1 rounded" <%= page === totalPages ? 'disabled' : '' %>>â€º</button>
        </div>
      </div>
  </div>


  <script>
    let currentFilter = '';
    let fromDate = '';
    let toDate = '';
    
    async function fetchOrders(page = 1) {
      let url = `/admin/salesReport?page=${page}`;
      if (currentFilter) url += `&filter=${currentFilter}`;
      if (currentFilter === 'custom' && fromDate && toDate) {
        url += `&from=${fromDate}&to=${toDate}`;
      }
      const res = await fetch(url, { headers: { 'Accept': 'application/json' } });
      if (!res.ok) {
    const errorData = await res.json();
    if (errorData.errors) {
      Object.values(errorData.errors).forEach(msg => {
        showToast(msg);
      });
    } else {
      showToast('Failed to load orders');
    }
    return;
  }
      const data = await res.json();


    
      // Render orders
      const tbody = document.getElementById('orders-tbody');
      if (!data.allOrders.length) {
        tbody.innerHTML = `<tr><td colspan="6" class="text-center py-6 text-gray-400">No orders found.</td></tr>`;
      } else {
        tbody.innerHTML = data.allOrders.map(order => {
  let couponHtml = '';
  const hasCoupon = order.coupon && order.discount && order.discount > 0;
  const hasOffer = order.offerDiscount && order.offerDiscount > 0;

  if (hasCoupon && hasOffer) {
    couponHtml = `<span class="font-semibold text-indigo-600">${order.coupon}</span>
      <span class="ml-2 text-green-600 font-bold">-â‚¹${order.discount.toLocaleString('en-IN')}</span>
      <span class="ml-2 text-yellow-600 font-bold">| Offer -â‚¹${order.offerDiscount.toLocaleString('en-IN')}</span>`;
  } else if (hasCoupon) {
    couponHtml = `<span class="font-semibold text-indigo-600">${order.coupon}</span>
      <span class="ml-2 text-green-600 font-bold">-â‚¹${order.discount.toLocaleString('en-IN')}</span>`;
  } else if (hasOffer) {
    couponHtml = `<span class="text-yellow-600 font-bold">Offer -â‚¹${order.offerDiscount.toLocaleString('en-IN')}</span>`;
  } else {
    couponHtml = 'No Discount';
  }

  return `
    <tr class="border-b">
      <td class="py-3 px-4">${order.orderId}</td>
      <td class="py-3 px-4">${new Date(order.createdAt).toLocaleDateString('en-IN')}</td>
      <td class="py-3 px-4">${order.userId?.name || 'Guest'}</td>
      <td class="py-3 px-4">â‚¹${order.totalAmount.toLocaleString('en-IN')}</td>
      <td class="py-3 px-4 capitalize">${order.paymentStatus || 'Pending'}</td>
      <td class="py-3 px-4">${couponHtml}</td>
    </tr>
  `;
}).join('');
      }
    
      // Render summary
      const summary = document.getElementById('orders-summary');
      const start = (data.page - 1) * 10 + 1;
      const end = Math.min(data.page * 10, data.totalOrders);
      summary.textContent = `Showing ${data.allOrders.length ? start : 0} to ${data.allOrders.length ? end : 0} of ${data.totalOrders} orders`;
    
      // Render pagination
      const pagDiv = document.getElementById('orders-pagination');
      pagDiv.innerHTML = `
        <button onclick="fetchOrders(${data.page - 1})" class="bg-gray-200 hover:bg-gray-300 text-gray-600 px-2 py-1 rounded" ${data.page === 1 ? 'disabled' : ''}>â€¹</button>
        <span>Page ${data.page} of ${data.totalPages}</span>
        <button onclick="fetchOrders(${data.page + 1})" class="bg-gray-200 hover:bg-gray-300 text-gray-600 px-2 py-1 rounded" ${data.page === data.totalPages ? 'disabled' : ''}>â€º</button>
      `;
    }

    function showToast(msg) {
  const toast = document.createElement('div');
  toast.className = 'toast-msg';
  toast.textContent = msg;
  document.getElementById('toast-container').appendChild(toast);
  setTimeout(() => toast.remove(), 3000);
}
    
    function applyFilter(filterType) {
      currentFilter = filterType;
      if (filterType === 'custom') {
        fromDate = document.getElementById('fromDate').value;
        toDate = document.getElementById('toDate').value;
        if (!fromDate || !toDate) {
          alert('Please select both from and to dates.');
          return;
        }
      }
      fetchOrders(1);
    }

    document.getElementById('downloadExcelBtn').addEventListener('click',function(){
      let url = '/admin/salesReport/excel';
  if (currentFilter) url += `?filter=${currentFilter}`;
  if (currentFilter === 'custom' && fromDate && toDate) {
    url += `&from=${fromDate}&to=${toDate}`;
  }
  window.location.href = url;
    })

    document.getElementById('downloadPdfBtn').addEventListener('click', function() {
  let url = '/admin/salesReport/pdf';
  if (currentFilter) url += `?filter=${currentFilter}`;
  if (currentFilter === 'custom' && fromDate && toDate) {
    url += `&from=${fromDate}&to=${toDate}`;
  }
  window.location.href = url;
});
    </script>

</body>
</html>
