<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>GameZone Admin - Add Game</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <style>
        body {
            background-color: #1f1f1f;
            color: #ffffff;
            font-family: 'Inter', sans-serif;
        }

        .card {
            background-color: #2a2a2a;
            border: 1px solid #333333;
            transition: all 0.2s ease;
        }

        .card:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.2);
        }

        .form-input {
            background-color: #333333;
            border: 1px solid #404040;
            color: #ffffff;
            border-radius: 0.75rem;
            padding: 0.75rem 1rem;
            transition: all 0.2s ease;
            width: 100%;
        }

        .form-input:focus {
            outline: none;
            border-color: #818cf8;
            box-shadow: 0 0 0 2px rgba(129, 140, 248, 0.1);
        }

        .form-label {
            color: #e2e8f0;
            font-size: 0.875rem;
            font-weight: 500;
            margin-bottom: 0.5rem;
        }

        .helper-text {
            color: #94a3b8;
            font-size: 0.75rem;
            margin-top: 0.25rem;
        }

        .file-upload {
            border: 2px dashed #404040;
            border-radius: 1rem;
            padding: 2rem;
            text-align: center;
            transition: all 0.3s ease;
            background: #2a2a2a;
            cursor: pointer;
        }

        .file-upload:hover {
            border-color: #818cf8;
            background: rgba(129, 140, 248, 0.1);
        }

        .btn-primary {
            background: #818cf8;
            color: white;
            border: none;
            border-radius: 0.75rem;
            padding: 0.75rem 1.5rem;
            font-weight: 500;
            transition: all 0.2s ease;
        }

        .btn-primary:hover {
            background: #6366f1;
            transform: translateY(-1px);
        }

        .btn-secondary {
            background: #333333;
            color: #ffffff;
            border: 1px solid #404040;
            border-radius: 0.75rem;
            padding: 0.75rem 1.5rem;
            font-weight: 500;
            transition: all 0.2s ease;
        }

        .btn-secondary:hover {
            background: #404040;
            transform: translateY(-1px);
        }

        select.form-input {
            background-color: #333333;
            color: #ffffff;
            border: 1px solid #404040;
        }

        select.form-input option {
            background-color: #2a2a2a;
            color: #ffffff;
        }

        /* Platform Select Styles */
        #platformSelectBtn {
            background-color: #333333;
            border: 1px solid #404040;
            color: #ffffff;
        }

        #platformSelectMenu {
            background-color: #2a2a2a;
            border: 1px solid #404040;
        }

        #platformSelectMenu div {
            color: #ffffff;
        }

        #platformSelectMenu div:hover {
            background-color: #404040;
        }

        /* Header section styles */
        .text-gray-800 {
            color: #ffffff;
        }

        .text-gray-600 {
            color: #94a3b8;
        }

        /* Button styles in header */
        .bg-white {
            background-color: #2a2a2a;
        }

        .text-gray-700 {
            color: #ffffff;
        }

        .shadow-lg {
            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.2);
        }

        /* Status badges */
        .status-badge.success { background: rgba(34, 197, 94, 0.2); color: #22c55e; }
        .status-badge.warning { background: rgba(245, 158, 11, 0.2); color: #f59e0b; }
        .status-badge.error { background: rgba(239, 68, 68, 0.2); color: #ef4444; }
        .status-badge.info { background: rgba(59, 130, 246, 0.2); color: #3b82f6; }

        /* Sidebar styles */
        .sidebar {
            background-color: #2a2a2a;
            width: 18rem;
            position: fixed;
            left: 0;
            top: 0;
            bottom: 0;
            overflow-y: auto;
            transition: transform 0.3s ease;
            z-index: 50;
        }

        @media (max-width: 1024px) {
            .sidebar {
                transform: translateX(-100%);
            }
            .sidebar.show {
                transform: translateX(0);
            }
            .main-content {
                margin-left: 0 !important;
            }
        }

        .sidebar-toggle {
            position: fixed;
            top: 1rem;
            left: 1rem;
            z-index: 60;
            padding: 0.5rem;
            border-radius: 0.5rem;
            background-color: #2a2a2a;
            border: 1px solid #404040;
        }

        .nav-group-content {
            max-height: 0;
            overflow: hidden;
            transition: max-height 0.3s ease;
        }

        .nav-group-content.show {
            max-height: 500px;
        }

        .nav-group-toggle {
            transition: transform 0.3s ease;
        }

        .nav-group-toggle.rotated {
            transform: rotate(180deg);
        }

        /* Updated image preview styles */
        .preview-container {
            width: 100%;
            margin-top: 1rem;
            background: #333;
            padding: 1rem;
            border-radius: 0.5rem;
        }

        .preview-image {
            width: auto;
            max-width: 100%;
            height: auto;
            display: block;
            margin: 0 auto;
        }

        #screenshotsContainer {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
            gap: 1rem;
            margin-top: 1rem;
        }

        .screenshot-preview {
            position: relative;
            background: #333;
            padding: 1rem;
            border-radius: 0.5rem;
        }

        .screenshot-preview img {
            width: auto;
            max-width: 100%;
            height: auto;
            display: block;
            margin: 0 auto;
        }

        .screenshot-remove-btn {
            position: absolute;
            top: 0.5rem;
            right: 0.5rem;
            background: rgba(239, 68, 68, 0.8);
            color: white;
            border-radius: 50%;
            width: 2rem;
            height: 2rem;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            z-index: 10;
        }

        #addScreenshotBtn {
            width: 100%;
            height: 200px;
            border: 2px dashed #404040;
            border-radius: 0.5rem;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            background: #2a2a2a;
            transition: all 0.3s ease;
        }

        #addScreenshotBtn:hover {
            border-color: #818cf8;
            background: rgba(129, 140, 248, 0.1);
        }

        /* Add these styles to your existing styles */
        .form-input.border-red-500 {
            border-color: #ef4444;
        }

        .form-input.border-red-500:focus {
            border-color: #ef4444;
            box-shadow: 0 0 0 2px rgba(239, 68, 68, 0.2);
        }

        .text-red-500 {
            color: #ef4444;
        }

        .file-upload.border-red-500 {
            border-color: #ef4444;
        }
    </style>
</head>
<body class="flex h-screen">
   
    <!-- Sidebar Placeholder - This would be replaced by the server with actual sidebar content -->
    <aside class="sidebar">
        <!-- Sidebar content would be included here by the server -->
        <div class="p-5">
            <div class="flex items-center space-x-3 mb-8">
                <span class="text-xl font-bold">GameZone Admin</span>
            </div>
            
            <!-- Navigation items would be rendered here -->
            <nav class="space-y-4">
                <!-- This is a placeholder for the actual sidebar content -->
            </nav>
        </div>
    </aside>

    <!-- Mobile Sidebar Toggle -->
    <button class="sidebar-toggle lg:hidden">
        <i class="fas fa-bars text-gray-600"></i>
    </button>

    <!-- Main Content -->
    <div class="flex-1 ml-0 lg:ml-72 p-8 main-content bg-[#1f1f1f]">
        <!-- Header -->
        <div class="flex justify-between items-center mb-8">
            <div>
                <h1 class="text-3xl font-bold text-white">Edit the Game</h1>
                <p class="text-gray-400 mt-2">Fill in the details below to Edit game to the store.</p>
            </div>
            
        </div>

        <!-- Add Game Form -->
        <form class="space-y-6" method="POST" action="/admin/editgame/<%=game._id%>"  enctype="multipart/form-data">
            <!-- Basic Info Section -->
            <div class="card p-6">
                <h2 class="text-xl font-semibold text-white mb-4">Basic Information</h2>
                <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                    <div>
                        <label class="form-label">Game Title</label>
                        <input value="<%=game.title%>" type="text" name="title" class="form-input <%= errors && errors.title ? 'border-red-500' : '' %>">
                        <p class="helper-text">Enter the official title of the game</p>
                        <% if (errors && errors.title) { %>
                            <p class="text-red-500 text-sm mt-1"><%= errors.title %></p>
                        <% } %>
                    </div>
                    <div>
                        <label class="form-label">Price</label>
                        <div class="relative">
                            <span class="absolute left-3 top-2.5 text-gray-400">₹</span>
                            <input value="<%=game.price%>" type="number" name="price" step="0.01" class="form-input pl-10 <%= errors && errors.price ? 'border-red-500' : '' %>">
                        </div>
                        <p class="helper-text">Set the retail price for the game</p>
                        <% if (errors && errors.price) { %>
                            <p class="text-red-500 text-sm mt-1"><%= errors.price %></p>
                        <% } %>
                    </div>
                </div>
            </div>

            <!-- Media Section -->
            <div class="card p-6">
                <h2 class="text-xl font-semibold text-white mb-4">Media</h2>
                
                <!-- Cover Image Section -->
                <div class="mb-6">
                    <label class="form-label block mb-2">Game Cover Image</label>
                    <p class="helper-text mb-3">Upload a high-quality cover image in 16:9 aspect ratio</p>
                    
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                        <label for="coverImageUpload" class="file-upload block h-full <%= errors && errors.coverImage ? 'border-red-500' : '' %>">
                            <input type="file" id="coverImageUpload" name="coverImage" accept="image/*" class="hidden">
                            <div class="flex flex-col items-center justify-center h-full">
                                <i class="fas fa-cloud-upload-alt text-4xl text-gray-400 mb-3"></i>
                                <p class="text-sm text-gray-600">Click to upload or drag and drop</p>
                                <p class="text-xs text-gray-500 mt-1">PNG, JPG up to 10MB</p>
                            </div>
                        </label>
                        
                        <!-- Existing image preview -->
                        <% if ((game && game.media && game.media.coverImage) || (typeof errors !== 'undefined' && game.media?.coverImage)) { %>
                            <div id="coverPreviewContainer" class="preview-container">
                                <div class="relative">
                                    <img id="coverPreviewImage" src="<%= game.media.coverImage %>" alt="Cover Preview" class="preview-image" />
                                    <button type="button" onclick="clearCoverPreview()"
                                            class="absolute top-2 right-2 p-2 bg-red-500 text-white rounded-full hover:bg-red-600 transition-colors">
                                        <i class="fas fa-times"></i>
                                    </button>
                                </div>
                            </div>
                        <% } else { %>
                            <div id="coverPreviewContainer" class="preview-container hidden"></div>
                        <% } %>
                    </div>
                    <% if (errors && errors.coverImage) { %>
                        <p class="text-red-500 text-sm mt-2"><%= errors.coverImage %></p>
                    <% } %>
                </div>
                  
                
                <!-- Screenshots Section -->
                <div class="mb-6">
                    <label class="form-label">Screenshots</label>
                    <p class="helper-text mb-3">Upload up to 4 screenshots in 16:9 aspect ratio</p>
                    
                    <div class="file-upload" id="screenshotDropzone">
                      <input type="file" id="screenshotUpload" name="screenshots" accept="image/*" class="hidden" multiple>
                      <div class="flex flex-col items-center">
                        <i class="fas fa-cloud-upload-alt text-4xl text-gray-400 mb-4"></i>
                        <p class="text-gray-400">Drag and drop screenshots here or click to browse</p>
                        <p class="text-sm text-gray-500 mt-2">Supported formats: JPG, PNG, WebP</p>
                      </div>
                    </div>
                    
                    <div id="screenshotsContainer" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
                      <!-- Preview Area -->
                      <% if ((game && game.media && game.media.screenshots && game.media.screenshots.length > 0) || 
                            (typeof errors !== 'undefined' && game.media?.screenshots?.length > 0)) { %>
                        <% game.media.screenshots.forEach(function(screenshot, index) { %>
                          <div class="screenshot-preview" data-id="existing-<%= index %>">
                            <div class="relative">
                              <img src="<%= screenshot %>" alt="Screenshot" class="preview-image" />
                              <button type="button" class="screenshot-remove-btn absolute top-2 right-2 p-2 bg-red-500 text-white rounded-full hover:bg-red-600 transition-colors"
                                      onclick="removeScreenshot('existing-<%= index %>')">
                                <i class="fas fa-times"></i>
                              </button>
                              <input type="hidden" name="existingScreenshots[]" value="<%= screenshot %>">
                            </div>
                          </div>
                        <% }) %>
                      <% } %>
                      <div id="addScreenshotBtn" onclick="document.getElementById('screenshotUpload').click()" 
                           class="cursor-pointer flex flex-col items-center justify-center h-48 border-2 border-dashed border-gray-400 rounded-lg hover:border-blue-500 transition-colors">
                        <i class="fas fa-plus text-2xl text-gray-400 mb-2"></i>
                        <span class="text-gray-400">Add Screenshot</span>
                      </div>
                    </div>
                </div>
                  
            </div>

            <!-- Details Section -->
            <div class="card p-6">
                <h2 class="text-xl font-semibold text-white mb-4">Game Details</h2>
                <div class="space-y-6">
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                        <div class="relative w-full">
                            <label class="form-label">Platform</label>

                            <button type="button" id="platformSelectBtn" class="w-full flex justify-between items-center form-input">
                                <span id="selectedPlatform">Select Platform</span>
                                <svg class="w-4 h-4 ml-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
                                </svg>
                            </button>

                            <div id="platformSelectMenu" class="absolute mt-1 w-full rounded-lg shadow-lg hidden z-10">
                                <div class="px-4 py-2 hover:bg-gray-100 cursor-pointer" data-value="ps5">PlayStation 5</div>
                                <div class="px-4 py-2 hover:bg-gray-100 cursor-pointer" data-value="xbox">Xbox Series X</div>
                                <div class="px-4 py-2 hover:bg-gray-100 cursor-pointer" data-value="pc">PC</div>
                            </div>

                            <input type="hidden" name="platform" id="platformInput"> 
                        </div>
                          
                        <div>
                            <label class="form-label">Category</label>
                            <select name="category" class="form-input <%= errors && errors.category ? 'border-red-500' : '' %>">
                                <option value="">Select Category</option>
                                <% category.forEach(function(cat) {
                                    const selectedCategoryId = game.category?._id?.toString() || game.category?.toString();
                                %>
                                    <option value="<%= cat._id %>" <%= cat._id.toString() === selectedCategoryId ? 'selected' : '' %>>
                                        <%= cat.categoryName %>
                                    </option>
                                <% }); %>
                            </select>
                            <% if (errors && errors.category) { %>
                                <p class="text-red-500 text-sm mt-1"><%= errors.category %></p>
                            <% } %>
                        </div>
                          
                    </div>
                    <div>
                        <label class="form-label">Description</label>
                        <textarea name="description" rows="4" class="form-input <%= errors && errors.description ? 'border-red-500' : '' %>"><%=game.description%></textarea>
                        <% if (errors && errors.description) { %>
                            <p class="text-red-500 text-sm mt-1"><%= errors.description %></p>
                        <% } %>
                    </div>
                    <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
                        <div class="mb-4">
                            <label class="block text-gray-700 font-medium mb-2">Release Date</label>
                            <input type="date" name="releaseDate" value="<%= game.releaseDate ? game.releaseDate.toISOString().split('T')[0] : '' %>" class="form-input w-full">
                            <% if (errors && errors.releaseDate) { %>
                                <p class="text-red-500 text-sm mt-1"><%= errors.releaseDate %></p>
                            <% } %>
                        </div>
                        <div>
                            <label class="form-label">Stock Quantity</label>
                            <input type="number" name="stockQuantity" class="form-input <%= errors && errors.stockQuantity ? 'border-red-500' : '' %>" 
                                   value="<%= game.stockQuantity %>">
                            <% if (errors && errors.stockQuantity) { %>
                                <p class="text-red-500 text-sm mt-1"><%= errors.stockQuantity %></p>
                            <% } %>
                        </div>
                        <div>
                            <label class="form-label">Status</label>
                            <select name="status" class="form-input <%= errors && errors.status ? 'border-red-500' : '' %>">
                                <option value="">Select Status</option>
                                <option value="active" <%=game.status==='Active'?'selected':''%>>Active</option>
                                <option value="inactive" <%=game.status==='inactive'?'selected':''%>>InActive</option>
                            </select>
                            <% if (errors && errors.status) { %>
                                <p class="text-red-500 text-sm mt-1"><%= errors.status %></p>
                            <% } %>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Submit Buttons -->
            <div class="flex justify-end space-x-4">
                <button type="button" class="btn-secondary">
                    Cancel
                </button>
                <button type="submit" class="btn-primary">
                    <i class="fas fa-save mr-2"></i>
                    Save Game
                </button>
            </div>
        </form>
    </div>

    <script>
        const MAX_SCREENSHOTS = 4;
        let screenshotCount = 0;
    
        function handleCoverImageUpload(event) {
            const file = event.target.files[0];
            if (file) {
                // Check if file is an image
                if (!file.type.startsWith('image/')) {
                    alert('Please select an image file');
                    event.target.value = '';
                    return;
                }
    
                const reader = new FileReader();
                reader.onload = function (e) {
                    const previewImage = document.getElementById('coverPreviewImage');
                    previewImage.src = e.target.result;
                    document.getElementById('coverPreviewContainer').classList.remove('hidden');
                };
                reader.readAsDataURL(file);
            }
        }
    
        function handleScreenshotUpload(event) {
            const files = Array.from(event.target.files);
            const currentScreenshots = document.querySelectorAll('.screenshot-preview').length;
            const remainingSlots = MAX_SCREENSHOTS - currentScreenshots;
    
            if (files.length > remainingSlots) {
                alert(`You can only add ${remainingSlots} more screenshot${remainingSlots === 1 ? '' : 's'}`);
                event.target.value = '';
                return;
            }
    
            files.forEach((file) => {
                // Check if file is an image
                if (!file.type.startsWith('image/')) {
                    alert('Please select only image files');
                    return;
                }
    
                const reader = new FileReader();
                reader.onload = function (e) {
                    const screenshotId = `new-${Date.now()}`;
                    const previewElement = document.createElement('div');
                    previewElement.className = 'screenshot-preview';
                    previewElement.dataset.id = screenshotId;
    
                    previewElement.innerHTML = `
                        <div class="relative">
                            <img src="${e.target.result}" alt="Screenshot" class="preview-image">
                            <button type="button" class="screenshot-remove-btn absolute top-2 right-2 p-2 bg-red-500 text-white rounded-full hover:bg-red-600 transition-colors"
                                    onclick="removeScreenshot('${screenshotId}')">
                                <i class="fas fa-times"></i>
                            </button>
                        </div>
                    `;
    
                    // Create a hidden input for the file
                    const fileInput = document.createElement('input');
                    fileInput.type = 'file';
                    fileInput.name = 'screenshots';
                    fileInput.style.display = 'none';
                    
                    // Create a new DataTransfer object and add the file
                    const dataTransfer = new DataTransfer();
                    dataTransfer.items.add(file);
                    fileInput.files = dataTransfer.files;
                    
                    previewElement.appendChild(fileInput);
    
                    const addButton = document.getElementById('addScreenshotBtn');
                    document.getElementById('screenshotsContainer').insertBefore(previewElement, addButton);
    
                    updateScreenshotCount();
                };
                reader.readAsDataURL(file);
            });
            
            event.target.value = ''; // Clear the input
        }
    
        function removeScreenshot(screenshotId) {
            const previewElement = document.querySelector(`.screenshot-preview[data-id="${screenshotId}"]`);
            if (previewElement) {
                previewElement.remove();
                updateScreenshotCount();
            }
        }
    
        function updateScreenshotCount() {
            const currentScreenshots = document.querySelectorAll('.screenshot-preview').length;
            const addButton = document.getElementById('addScreenshotBtn');
            
            if (currentScreenshots >= MAX_SCREENSHOTS) {
                addButton.style.display = 'none';
            } else {
                addButton.style.display = 'flex';
            }
        }
    
        function clearCoverPreview() {
            document.getElementById('coverPreviewImage').src = '';
            document.getElementById('coverPreviewContainer').classList.add('hidden');
            document.getElementById('coverImageUpload').value = '';
        }
    
        function setupDragAndDrop(dropArea, fileInput) {
            if (!dropArea || !fileInput) return;
    
            ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {
                dropArea.addEventListener(eventName, preventDefaults, false);
            });
    
            function preventDefaults(e) {
                e.preventDefault();
                e.stopPropagation();
            }
    
            ['dragenter', 'dragover'].forEach(eventName => {
                dropArea.addEventListener(eventName, () => {
                    dropArea.classList.add('border-blue-500');
                }, false);
            });
    
            ['dragleave', 'drop'].forEach(eventName => {
                dropArea.addEventListener(eventName, () => {
                    dropArea.classList.remove('border-blue-500');
                }, false);
            });
    
            dropArea.addEventListener('drop', (e) => {
                const dt = e.dataTransfer;
                const files = dt.files;
    
                if (files.length > 0) {
                    fileInput.files = files;
                    fileInput.dispatchEvent(new Event('change'));
                }
            }, false);
        }
    
        function initPlatformDropdown() {
            const platformSelectBtn = document.getElementById('platformSelectBtn');
            const platformSelectMenu = document.getElementById('platformSelectMenu');
            const platformInput = document.getElementById('platformInput');
            const selectedPlatform = document.getElementById('selectedPlatform');
    
            if (!platformSelectBtn || !platformSelectMenu || !platformInput || !selectedPlatform) return;
    
            platformSelectBtn.addEventListener('click', () => {
                platformSelectMenu.classList.toggle('hidden');
            });
    
            platformSelectMenu.querySelectorAll('div').forEach(item => {
                item.addEventListener('click', (e) => {
                    const value = e.target.getAttribute('data-value');
                    const text = e.target.textContent;
                    selectedPlatform.textContent = text;
                    platformInput.value = value;
                    platformSelectMenu.classList.add('hidden');
                });
            });
    
            document.addEventListener('click', (e) => {
                if (!platformSelectBtn.contains(e.target) && !platformSelectMenu.contains(e.target)) {
                    platformSelectMenu.classList.add('hidden');
                }
            });
        }
    
        function initNavToggles() {
            const navGroupHeaders = document.querySelectorAll('.nav-group-header');
            navGroupHeaders.forEach(header => {
                header.addEventListener('click', () => {
                    const content = header.nextElementSibling;
                    const toggle = header.querySelector('.nav-group-toggle');
                    if (content && toggle) {
                        content.classList.toggle('show');
                        toggle.classList.toggle('rotated');
                    }
                });
            });
        }
    
        document.addEventListener('DOMContentLoaded', () => {
            // Add event listeners
            const coverImageUpload = document.getElementById('coverImageUpload');
            const screenshotUpload = document.getElementById('screenshotUpload');
            
            if (coverImageUpload) {
                coverImageUpload.addEventListener('change', handleCoverImageUpload);
            }
            
            if (screenshotUpload) {
                screenshotUpload.addEventListener('change', handleScreenshotUpload);
            }
    
            // Setup drag and drop
            setupDragAndDrop(
                document.querySelector('.file-upload'), 
                document.getElementById('coverImageUpload')
            );
            setupDragAndDrop(
                document.getElementById('screenshotDropzone'), 
                document.getElementById('screenshotUpload')
            );
    
            initPlatformDropdown();
            initNavToggles();

            // Initialize screenshot count
            updateScreenshotCount();
        });
    </script>
    
</body>
</html>