<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Admin Order Page</title>
  <script src="https://cdn.tailwindcss.com"></script>
    <style>
    body {
      font-family: sans-serif;
    }
  </style>

</head>
<body class="flex flex-col md:flex-row h-screen">
  <%- include('partials/sidebar') %>

<div class="flex-1 md:ml-72 p-4 sm:p-6 md:p-8 overflow-auto">
  <h1 class="text-xl sm:text-2xl font-bold text-gray-800 mb-6">Orders Management</h1>

  <div class="bg-white rounded-2xl shadow-lg p-4 sm:p-6 overflow-x-auto">
    <table class="min-w-full table-auto text-sm sm:text-base border-collapse">
      <thead class="bg-gray-100 sticky top-0 z-10">
        <tr>
          <th class="px-4 py-3 text-left text-gray-700 font-semibold whitespace-nowrap">Order ID</th>
          <th class="px-4 py-3 text-left text-gray-700 font-semibold whitespace-nowrap">Customer</th>
          <th class="px-4 py-3 text-left text-gray-700 font-semibold whitespace-nowrap">Date</th>
          <th class="px-4 py-3 text-left text-gray-700 font-semibold whitespace-nowrap">Status</th>
          <th class="px-4 py-3 text-left text-gray-700 font-semibold whitespace-nowrap">Total</th>
          <th class="px-4 py-3 text-left text-gray-700 font-semibold whitespace-nowrap">Action</th>
        </tr>
      </thead>
      <tbody class="divide-y divide-gray-200 text-gray-800">
        <% order.forEach(order => { %>
          <tr class="hover:bg-gray-50 transition">
            <td class="px-4 py-3 font-medium text-gray-900 whitespace-nowrap">#<%= order.orderId %></td>
            <td class="px-4 py-3 whitespace-nowrap">
              <div class="font-semibold"><%= order.userId?.name %></div>
              <div class="text-gray-500 text-sm"><%= order.userId?.email %></div>
            </td>
            <td class="px-4 py-3 whitespace-nowrap"><%= order.createdAt.toDateString() %></td>
            <td class="px-4 py-3">
              <% 
                const statuses = order.items.map(i => i.status);
                const uniqueStatuses = [...new Set(statuses)];
                let summaryStatus = uniqueStatuses.length === 1 ? uniqueStatuses[0] : 'Mixed';
              %>
              <span class="inline-block px-3 py-1 text-xs font-semibold rounded-full
                <%= summaryStatus === 'Delivered' ? 'bg-green-100 text-green-800' : '' %>
                <%= summaryStatus === 'Shipped' ? 'bg-blue-100 text-blue-800' : '' %>
                <%= summaryStatus === 'Out for Delivery' ? 'bg-yellow-100 text-yellow-800' : '' %>
                <%= summaryStatus === 'Pending' ? 'bg-yellow-300 text-yellow-800' : '' %>
                <%= summaryStatus === 'Cancelled' ? 'bg-red-100 text-red-800' : '' %>
                <%= summaryStatus === 'Mixed' ? 'bg-gray-200 text-gray-800' : '' %>">
                <%= summaryStatus %>
              </span>
            </td>
            <td class="px-4 py-3 whitespace-nowrap">â‚¹ <%= order.totalAmount.toLocaleString('en-IN') %></td>
            <td class="px-4 py-3 whitespace-nowrap">
            <!-- Change this line -->
<a href="/admin/Userorderdetail/<%= order._id %>" 
  class="inline-flex items-center gap-2 px-3 py-1.5 border border-indigo-600 bg-white rounded-md text-sm text-indigo-700 hover:bg-indigo-600 hover:text-white transition font-medium shadow-sm">
  <svg class="w-4 h-4" fill="none" stroke="currentColor" stroke-width="1.5" viewBox="0 0 24 24">
    <path stroke-linecap="round" stroke-linejoin="round" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
    <path stroke-linecap="round" stroke-linejoin="round" d="M2.25 12C3.75 7.5 7.5 4.5 12 4.5s8.25 3 9.75 7.5c-1.5 4.5-5.25 7.5-9.75 7.5s-8.25-3-9.75-7.5z" />
  </svg>
  View
</a>
             
             
            </td>
          </tr>
        <% }) %>
      </tbody>
    </table>
  </div>
</div>





 <script>
  function toggleDropdown(event, button) {
    event.stopPropagation(); // Prevent event from bubbling up
    const allDropdowns = document.querySelectorAll('.dropdown');
    
    // Close all dropdowns first
    allDropdowns.forEach(dropdown => {
      if (!dropdown.contains(button.nextElementSibling)) {
        dropdown.classList.add('hidden');
      }
    });

    // Toggle the clicked one
    const dropdown = button.nextElementSibling;
    dropdown.classList.toggle('hidden');
  }

  // Close all dropdowns when clicking outside
  document.addEventListener('click', function () {
    document.querySelectorAll('.dropdown').forEach(d => d.classList.add('hidden'));
  });









</script>


</body>
</html>
