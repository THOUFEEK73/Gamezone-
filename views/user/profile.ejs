<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>User Profile</title>
  <link rel="stylesheet" href="/styles/styles.css" />
  <script src="https://cdn.tailwindcss.com"></script>
  <script src="https://kit.fontawesome.com/a076d05399.js" crossorigin="anonymous"></script>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" />

 <link rel="stylesheet" href="/css/profile.css">


</head>

<body class="bg-gray-100 min-h-screen">

<%- include('partials/navbar') %>

  <div class="flex flex-col lg:flex-row min-h-screen">
    <%- include('partials/sidebar') %>
   <main class="flex items-center justify-center bg-gray-50 px-4 min-h-screen w-full">

 <div class="profile-page">
 <div class="profile-card bg-white shadow-lg rounded-2xl p-6 w-full max-w-md">

    <button class="btn-edit" id="edit-btn">Edit</button>

    <img src="https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRH87TKQrWcl19xly2VNs0CjBzy8eaKNM-ZpA&s"
         alt="User Avatar" class="avatar-img" />

    <div class="info-box">
      <p class="label">Name</p>
      <p class="value"><%= user.name %></p>
    </div>

    <div class="info-box">
      <p class="label">Email</p>
      <p class="value"><%= user.email %></p>
    </div>

    <div class="info-box">
      <p class="label">Phone</p>
      <p class="value"><%= user.phone %></p>
    </div>

    <div class="referral-box">
      <p class="referral-code" id="referral-code">OXY9BA5BD</p>
      <div class="referral-icons">
        <button id="copy-btn" title="Copy"><i class="fas fa-copy"></i></button>
        <button id="share-btn" title="Share"><i class="fas fa-share-alt"></i></button>
      </div>
      <p class="referral-msg" id="copy-feedback">
        Share this code with friends and get ₹200 in your wallet when they sign up!
      </p>
    </div>

    <% if (messages.success && messages.success.length > 0) { %>
      <div class="flash-message success"><%= messages.success[0] %></div>
    <% } %>
    <% if (messages.error && messages.error.length > 0) { %>
      <div class="flash-message error"><%= messages.error[0] %></div>
    <% } %>
  </div>
</div>

</main>

  </div>

 <!-- Edit Profile Modal -->
<div id="editProfileModal"
  class="fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-40 hidden transition duration-300">
  <div
    class="bg-white rounded-2xl p-6 w-full max-w-md shadow-xl relative animate-fadeIn">
    
    <!-- Close Button -->
    <button onclick="closeModal()" class="absolute top-3 right-4 text-gray-400 hover:text-black text-2xl">&times;</button>

    <!-- Modal Header -->
    <h2 class="text-xl font-semibold mb-4 text-center">Edit Profile</h2>

    <!-- Form -->
    <form action="/edit-profile" method="POST" class="space-y-5" id="edit-form">
      
      <!-- Avatar -->
      <div class="flex justify-center">
        <img src="/images/user.jpg" alt="Profile"
          class="w-20 h-20 rounded-full object-cover shadow-md border-2 border-gray-200" />
      </div>

      <!-- Name Field -->
      <div>
        <label class="block text-sm font-medium text-gray-700 mb-1">Name</label>
        <input type="text" name="name" value="<%= user.name %>"
          class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500" />
      </div>

      <!-- Email Field -->
      <div>
        <label class="block text-sm font-medium text-gray-700 mb-1">Email</label>
        <input type="email" name="email" value="<%= user.email %>"
          class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500" />
        <button type="button" id="edit-email-btn"
          class="mt-2 text-blue-600 hover:underline text-sm">Verify Email</button>
        <div id="emailError" class="text-red-600 text-xs mt-1"></div>
      </div>

      <!-- Phone Field -->
      <div>
        <label class="block text-sm font-medium text-gray-700 mb-1">Phone</label>
        <input type="text" name="phone" value="<%= user.phone %>"
          class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500" required />
      </div>

      <!-- Save Button -->
      <div class="text-right">
        <button type="submit"
          class="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg transition">Save</button>
      </div>
    </form>
  </div>
</div>


<!-- Email Verification Modal -->
<div id="emailVerificationModal" class="fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-40 hidden">
  <div class="bg-white rounded-2xl p-6 w-full max-w-sm shadow-lg relative">
    <button onclick="closeEmailModal()" class="absolute top-2 right-2 text-gray-400 hover:text-black">&times;</button>
    <h2 class="text-xl font-semibold mb-4">Verify Your Email</h2>

    <form id="verificationForm" class="space-y-4">
      <input type="hidden" name="email" id="hiddenNewEmail" />

      <label class="block text-sm font-medium">Enter the 6-digit verification code</label>
      <input
        type="text"
        name="verificationCode"
        maxlength="6"
        class="w-full px-3 py-2 border rounded-lg text-center tracking-widest font-mono text-lg"
        
        pattern="[0-9]{6}"
        autocomplete="off"
      />

      <!-- ✅ Feedback Area -->
      <div id="verificationFeedback" class="text-center text-sm font-medium mb-2"></div>

      <button type="submit"class="bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded-lg w-full"> Verify </button>
    </form>
  </div>
</div>

<script>
  const originalEmail = "<%= user.email %>";
  const editForm = document.getElementById("edit-form");
  const editEmailBtn = document.getElementById("edit-email-btn");
  const emailInput = editForm.querySelector('input[name="email"]');
  const verificationForm = document.getElementById("verificationForm");
  const emailVerificationModal = document.getElementById("emailVerificationModal");
  const editProfileModal = document.getElementById("editProfileModal");
  const hiddenNewEmail = document.getElementById("hiddenNewEmail");
  const errorText = document.getElementById("errorText");
  const verificationFeedback = document.getElementById("verificationFeedback");

  document.getElementById("edit-btn").addEventListener("click", () => {
    editProfileModal.classList.remove("hidden");
  });

  function closeModal() {
    editProfileModal.classList.add("hidden");
  }

  function closeEmailModal() {
    emailVerificationModal.classList.add("hidden");
    verificationFeedback.textContent = "";
    verificationFeedback.className = "text-center text-sm font-medium mb-2";
  }

  // Edit profile form submission
  editForm.addEventListener("submit", async function (e) {
    const newEmail = emailInput.value.trim();
    document.getElementById("emailError").textContent = "";

    if (newEmail !== originalEmail) {
      e.preventDefault();
      if (!newEmail) {
        document.getElementById("emailError").textContent = "Email is required.";
        return;
      }
      // Check with server if email is valid and send OTP
      try {
        const res = await fetch("/send-verification-code", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ email: newEmail })
        });
        const data = await res.json();
        if (!res.ok || !data.success) {
          document.getElementById("emailError").textContent = data.message || "Failed to send verification code.";
          return;
        }
        hiddenNewEmail.value = newEmail;
        closeModal();
        emailVerificationModal.classList.remove("hidden");
        verificationFeedback.textContent = "OTP sent successfully!";
        verificationFeedback.className = "text-center text-sm font-medium mb-2 text-green-600";
      } catch (err) {
        document.getElementById("emailError").textContent = "Something went wrong. Try again.";
      }
    }
  });

  // Separate "Verify Email" button
  editEmailBtn.addEventListener("click", async () => {
    const newEmail = emailInput.value.trim();
    document.getElementById("emailError").textContent = "";

    if (!newEmail) {
      document.getElementById("emailError").textContent = "Email is required.";
      return;
    }
    if (newEmail === originalEmail) return;

    // Check with server if email is valid and send OTP
    try {
      const res = await fetch("/send-verification-code", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ email: newEmail })
      });
      const data = await res.json();
      if (!res.ok || !data.success) {
        document.getElementById("emailError").textContent = data.message || "Failed to send verification code.";
        return;
      }
      hiddenNewEmail.value = newEmail;
      closeModal();
      emailVerificationModal.classList.remove("hidden");
      verificationFeedback.textContent = "OTP sent successfully!";
      verificationFeedback.className = "text-center text-sm font-medium mb-2 text-green-600";
    } catch (err) {
      document.getElementById("emailError").textContent = "Something went wrong. Try again.";
    }
  });

  // OTP verification
  verificationForm.addEventListener("submit", async function (e) {
    e.preventDefault();
    const email = hiddenNewEmail.value;
    const verificationCode = this.querySelector('input[name="verificationCode"]').value.trim();

    try {
      const res = await fetch("/verify-email", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ email, verificationCode })
      });

      const data = await res.json();
      console.log("Verification Response:", data);

      if (res.ok && data.success) {
        verificationFeedback.textContent = "Email verified successfully!";
     
        
        verificationFeedback.classList.add("text-green-600");

        

        setTimeout(() => {
          emailVerificationModal.classList.add("hidden");
          editForm.submit(); // Resubmit profile form
        }, 1000);
      } else {
        verificationFeedback.textContent = data.message || "Verification failed.";
        verificationFeedback.classList.add("text-red-600");
      }
    } catch (err) {
      console.error("Verification error:", err);
      verificationFeedback.textContent = "An error occurred. Please try again.";
      verificationFeedback.classList.add("text-red-600");
    }
  });

  // Auto-hide flash messages
  setTimeout(() => {
    const flash = document.getElementById('flash-message');
    if (flash) {
      flash.classList.add('opacity-0');
      setTimeout(() => flash.remove(), 500);
    }
  }, 3000);
</script>



</body>

</html>