<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>User Profile</title>

  <script src="https://cdn.tailwindcss.com"></script>
  <script src="https://kit.fontawesome.com/a076d05399.js" crossorigin="anonymous"></script>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" />
  <link rel="stylesheet" href="/css/profile.css">
  <style>
    .success-slide {
      display: flex;
      align-items: center;
      justify-content: center;
      background-color: #dcfce7;
      color: #15803d;
      border: 1px solid #86efac;
      padding: 10px 16px;
      font-weight: 600;
      border-radius: 12px;
      max-width: 300px;
      margin: auto;
      box-shadow: 0 8px 24px rgba(0, 0, 0, 0.1);
      transform: translateY(-20px);
      opacity: 0;
      transition: all 0.4s ease;
    }

    .success-slide.show {
      transform: translateY(0);
      opacity: 1;
    }

    .check-icon {
      width: 20px;
      height: 20px;
      stroke: #22c55e;
      animation: drawCheck 0.6s ease forwards;
    }

    @keyframes drawCheck {
      0% {
        stroke-dasharray: 22;
        stroke-dashoffset: 22;
      }
      100% {
        stroke-dashoffset: 0;
      }
    }

    #edit-success-msg {
      position: fixed;
      right: 32px;
      bottom: 32px;
      z-index: 9999;
      display: flex;
      align-items: center;
      justify-content: center;
      background-color: #dcfce7;
      color: #15803d;
      border: 1px solid #86efac;
      padding: 10px 16px;
      font-weight: 600;
      border-radius: 12px;
      max-width: 300px;
      box-shadow: 0 8px 24px rgba(0, 0, 0, 0.1);
      transform: translateY(40px);
      opacity: 0;
      transition: all 0.4s cubic-bezier(.4,0,.2,1);
    }

    #edit-success-msg.show {
      transform: translateY(0);
      opacity: 1;
    }
  </style>
</head>

<body class="bg-gray-100 min-h-screen">
  <%- include('partials/navbar') %>
  <div class="flex min-h-screen">
    <!-- Sidebar -->
    <div class="w-64 bg-white border-r hidden md:block">
      <%- include('partials/sidebar') %>
    </div>
    <!-- Main Content -->
    <main class="flex-1 flex justify-center items-center p-4 bg-gray-50">
      <div class="profile-page w-full max-w-md">
        <div class="profile-card bg-white shadow-lg rounded-2xl p-6 w-full">
          <button class="btn-edit absolute top-6 right-6" id="edit-btn">
            <i class="fas fa-edit"></i>
          </button>
          <div class="flex flex-col items-center">
            <img src="https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRH87TKQrWcl19xly2VNs0CjBzy8eaKNM-ZpA&s"
              alt="User Avatar" class="avatar-img w-24 h-24 rounded-full object-cover border-2 border-gray-200 mb-4" />
            <div class="info-box w-full mb-2">
              <p class="label text-xs text-gray-500">Name</p>
              <p class="value text-lg font-semibold text-gray-800"><%= user.name %></p>
            </div>
            <div class="info-box w-full mb-2">
              <p class="label text-xs text-gray-500">Email</p>
              <p class="value text-base text-gray-700"><%= user.email %></p>
            </div>
            <div class="info-box w-full mb-2">
              <p class="label text-xs text-gray-500">Phone</p>
              <p class="value text-base text-gray-700"><%= user.phone %></p>
            </div>
            <div class="referral-box w-full mt-4 bg-blue-50 rounded-lg p-3 flex flex-col items-center">
              <p class="referral-code font-mono text-lg text-blue-700" id="referral-code">OXY9BA5BD</p>
              <div class="referral-icons flex gap-3 mt-2">
                <button id="copy-btn" title="Copy"><i class="fas fa-copy"></i></button>
                <button id="share-btn" title="Share"><i class="fas fa-share-alt"></i></button>
              </div>
              <p class="referral-msg text-xs text-gray-600 mt-2" id="copy-feedback">
                Share this code with friends and get â‚¹200 in your wallet when they sign up!
              </p>
            </div>
            <% if (messages.success && messages.success.length > 0) { %>
              <div class="flash-message success mt-4"><%= messages.success[0] %></div>
            <% } %>
            <% if (messages.error && messages.error.length > 0) { %>
              <div class="flash-message error mt-4"><%= messages.error[0] %></div>
            <% } %>
          </div>
        </div>
      </div>
    </main>
  </div>

  <!-- Edit Profile Modal -->
  <div id="editProfileModal"
    class="fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-40 hidden transition duration-300">
    <div class="bg-white rounded-2xl p-6 w-full max-w-md shadow-xl relative animate-fadeIn">
      <!-- Close Button -->
      <button onclick="closeModal()" class="absolute top-3 right-4 text-gray-400 hover:text-black text-2xl">&times;</button>
      <!-- Modal Header -->
      <h2 class="text-xl font-semibold mb-4 text-center">Edit Profile</h2>
      <!-- Form -->
      <div class="space-y-5" id="edit-form">
        <!-- Avatar -->
        <div class="flex justify-center">
          <img src="/images/user.jpg" alt="Profile"
            class="w-20 h-20 rounded-full object-cover shadow-md border-2 border-gray-200" />
        </div>
        <!-- Name Field -->
        <div>
          <label class="block text-sm font-medium text-gray-700 mb-1">Name</label>
          <input type="text" name="name" id="edit-name" value="<%= user.name %>"
            class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500" />
          <span id="profile-error-name" class="flex items-center gap-1 text-red-600 text-sm font-medium mt-1 transition-all duration-300">
            <svg class="w-4 h-4 text-red-500 shrink-0" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"
              xmlns="http://www.w3.org/2000/svg">
              <path stroke-linecap="round" stroke-linejoin="round"
                d="M12 9v2m0 4h.01m-6.938 4h13.856C18.07 19 19 18.07 19 16.938V7.062C19 5.93 18.07 5 16.938 5H7.062C5.93 5 5 5.93 5 7.062v9.876C5 18.07 5.93 19 7.062 19z">
              </path>
            </svg>
            <span id="profile-error-name-text"></span>
          </span>
        </div>
        <!-- Email Field -->
        <div>
          <label class="block text-sm font-medium text-gray-700 mb-1">Email</label>
          <input type="email" name="email" value="<%= user.email %>"
            class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500" readonly />
          <button type="button" id="edit-email-btn"
            class="mt-2 inline-flex items-center gap-2 px-4 py-1.5 rounded-md bg-blue-100 text-blue-700 hover:bg-blue-600 hover:text-white transition-colors duration-300 text-sm font-medium shadow-sm">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none"
              viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
              <path stroke-linecap="round" stroke-linejoin="round"
                d="M16 12H8m0 0l4-4m-4 4l4 4" />
            </svg>
            Tap to Verify Email
          </button>
          <div id="emailError" class="text-red-600 text-xs mt-1"></div>
        </div>
        <!-- Phone Field -->
        <div>
          <label class="block text-sm font-medium text-gray-700 mb-1">Phone</label>
          <input type="text" name="phone" id="edit-phone" value="<%= user.phone %>"
            class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500" />
          <span id="profile-error-phone" class="profile-error text-red-600 text-sm font-medium flex items-center gap-1 mt-1 transition-all duration-300">
            <svg class="w-4 h-4 text-red-500" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"
              xmlns="http://www.w3.org/2000/svg">
              <path stroke-linecap="round" stroke-linejoin="round"
                d="M12 9v2m0 4h.01m-6.938 4h13.856C18.07 19 19 18.07 19 16.938V7.062C19 5.93 18.07 5 16.938 5H7.062C5.93 5 5 5.93 5 7.062v9.876C5 18.07 5.93 19 7.062 19z"></path>
            </svg>
            <span id="profile-error-phone-text"></span>
          </span>
        </div>
        <!-- Save Button -->
        <div class="text-right">
          <button onclick="submitEditForm()"
            class="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg transition">Save</button>
        </div>
      </div>
    </div>
  </div>

  <!-- Email Verification Modal -->
  <div id="emailVerificationModal" class="fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-40 hidden">
    <div class="bg-white rounded-2xl p-6 w-full max-w-sm shadow-lg relative">
      <button onclick="closeEmailModal()" class="absolute top-2 right-2 text-gray-400 hover:text-black text-2xl">&times;</button>
      <h2 class="text-xl font-semibold mb-4 text-center">Verify Your Email</h2>
      <form id="verificationForm" class="space-y-4">
        <input type="hidden" name="email" id="hiddenNewEmail" />
        <label class="block text-sm font-medium text-gray-700 text-center">Enter the 6-digit verification code</label>
        <div id="otp-inputs" class="flex justify-between gap-2">
          <input type="text" name="otp" maxlength="1" pattern="[0-9]*" inputmode="numeric"
            class="otp-digit w-12 h-12 text-center border border-gray-300 rounded-lg text-2xl font-mono focus:outline-none focus:ring-2 focus:ring-green-500 transition" />
          <input type="text" name="otp" maxlength="1" pattern="[0-9]*" inputmode="numeric"
            class="otp-digit w-12 h-12 text-center border border-gray-300 rounded-lg text-2xl font-mono focus:outline-none focus:ring-2 focus:ring-green-500 transition" />
          <input type="text" name="otp" maxlength="1" pattern="[0-9]*" inputmode="numeric"
            class="otp-digit w-12 h-12 text-center border border-gray-300 rounded-lg text-2xl font-mono focus:outline-none focus:ring-2 focus:ring-green-500 transition" />
          <input type="text" name="otp" maxlength="1" pattern="[0-9]*" inputmode="numeric"
            class="otp-digit w-12 h-12 text-center border border-gray-300 rounded-lg text-2xl font-mono focus:outline-none focus:ring-2 focus:ring-green-500 transition" />
          <input type="text" name="otp" maxlength="1" pattern="[0-9]*" inputmode="numeric"
            class="otp-digit w-12 h-12 text-center border border-gray-300 rounded-lg text-2xl font-mono focus:outline-none focus:ring-2 focus:ring-green-500 transition" />
          <input type="text" name="otp" maxlength="1" pattern="[0-9]*" inputmode="numeric"
            class="otp-digit w-12 h-12 text-center border border-gray-300 rounded-lg text-2xl font-mono focus:outline-none focus:ring-2 focus:ring-green-500 transition" />
        </div>
        <div id="verificationFeedback" class="text-center text-sm font-medium text-red-600 mb-2"></div>
        <button type="submit"
          class="bg-gradient-to-r from-green-500 to-green-600 hover:from-green-600 hover:to-green-700 text-white font-semibold py-2 rounded-lg w-full shadow-md transition-all">
          Verify
        </button>
      </form>
    </div>
  </div>

  <!-- Success Message -->
  <div id="edit-success-msg" class="success-slide hidden">
    <svg class="check-icon" viewBox="0 0 24 24" fill="none" stroke="currentColor">
      <path d="M5 13l4 4L19 7" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
    </svg>
    <span id="edit-success-text" class="ml-2"></span>
  </div>

  <%- include("partials/footer") %>

  <script>
    const originalEmail = "<%= user.email %>";
    const editForm = document.getElementById("edit-form");
    const editEmailBtn = document.getElementById("edit-email-btn");
    const emailInput = editForm.querySelector('input[name="email"]');
    const verificationForm = document.getElementById("verificationForm");
    const emailVerificationModal = document.getElementById("emailVerificationModal");
    const editProfileModal = document.getElementById("editProfileModal");
    const hiddenNewEmail = document.getElementById("hiddenNewEmail");
    const verificationFeedback = document.getElementById("verificationFeedback");

    editEmailBtn.addEventListener("click", () => {
      emailInput.removeAttribute("readonly");
      emailInput.classList.add("border-blue-500", "bg-white");
      emailInput.focus();
    });

    document.getElementById("edit-btn").addEventListener("click", () => {
      editProfileModal.classList.remove("hidden");
    });

    function closeModal() {
      editProfileModal.classList.add("hidden");
    }

    function closeEmailModal() {
      emailVerificationModal.classList.add("hidden");
      verificationFeedback.textContent = "";
      verificationFeedback.className = "text-center text-sm font-medium mb-2";
    }

    async function submitEditForm() {
      document.getElementById("profile-error-name").innerText = "";
      document.getElementById("profile-error-phone").innerText = "";
      document.getElementById("edit-success-msg").classList.add("hidden");

      const name = document.getElementById("edit-name").value.trim();
      const phone = document.getElementById("edit-phone").value.trim();
      const email = emailInput.value.trim();

      if (email !== originalEmail) {
        try {
          const response = await fetch('/send-verification-code', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify({ email })
          })
          const result = await response.json();
          if (result.success) {
            hiddenNewEmail.value = email;
            closeModal();
            emailVerificationModal.classList.remove("hidden");
            verificationFeedback.textContent = "OTP sent to your new email!";
            verificationFeedback.className = "text-center text-sm font-medium mb-2 text-green-600";
          } else {
            document.getElementById("emailError").innerText = result.message || "Failed to send OTP.";
          }
        } catch (error) {
          document.getElementById("emailError").innerText = "Network error. Try again.";
        }
        return;
      }

      try {
        const res = await fetch('/edit-profile', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({ name, phone })
        });

        const result = await res.json();

        if (result.errors) {
          if (result.errors.name) {
            document.getElementById("profile-error-name").innerText = result.errors.name;
          }
          if (result.errors.phone) {
            document.getElementById("profile-error-phone").innerText = result.errors.phone;
          }
        }
        if (result.message) {
          showSuccessMessage(result.message);
          setTimeout(() => {
            closeModal();
            window.location.reload();
          }, 1500);
        }
      } catch (err) {
        console.error("Failed to submit edit form:", err);
      }
    }

    verificationForm.addEventListener("submit", async function (e) {
      e.preventDefault();
      verificationFeedback.textContent = "";
      const email = hiddenNewEmail.value;
      const otpInputs = verificationForm.querySelectorAll('.otp-digit');
      let verificationCode = '';
      otpInputs.forEach(input => {
        verificationCode += input.value.trim();
      })
      if (verificationCode.length !== 6) {
        verificationFeedback.textContent = "Please enter the OTP code.";
        verificationFeedback.className = "text-center text-sm font-medium mb-2 text-red-600";
        return;
      }
      try {
        const res = await fetch('/verify-email', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ email, verificationCode })
        });
        const result = await res.json();
        if (result.success) {
          verificationFeedback.textContent = "Email verified and updated!";
          verificationFeedback.className = "text-center text-sm font-medium mb-2 text-green-600";
          setTimeout(() => {
            closeEmailModal();
            window.location.reload();
          }, 1000);
        } else {
          verificationFeedback.textContent = result.message || "Invalid OTP.";
          verificationFeedback.className = "text-center text-sm font-medium mb-2 text-red-600";
        }
      } catch (err) {
        verificationFeedback.textContent = "Network error. Try again.";
        verificationFeedback.className = "text-center text-sm font-medium mb-2 text-red-600";
      }
    });

    function showSuccessMessage(message) {
      const msgBox = document.getElementById("edit-success-msg");
      const msgText = document.getElementById("edit-success-text");
      msgText.innerText = message;
      msgBox.classList.add("show");
      msgBox.classList.remove("hidden");
      setTimeout(() => {
        msgBox.classList.remove("show");
        setTimeout(() => {
          msgBox.classList.add("hidden");
        }, 400);
      }, 3000);
    }
  </script>
</body>
</html>