<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Order Details</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <script src="https://kit.fontawesome.com/a076d05399.js" crossorigin="anonymous"></script>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" />
</head>

<body class="bg-gray-100 text-sm">
  <%- include('partials/navbar') %>
    <!-- Main Content -->
    <main class="lg px-3 py-6 mt-16">
      <div class="max-w-4xl mx-auto bg-white p-4 rounded-xl shadow space-y-5">

        <!-- Order Header -->
        <div class="flex flex-col md:flex-row justify-between md:items-center border-b pb-3">
          <div>
            <h1 class="text-xl font-bold text-gray-800">Order #<%= order.orderId %>
            </h1>
            <p class="text-xs text-gray-500">Placed on:</p>
          </div>
        </div>

        <!-- Customer Info -->
        <div class="grid md:grid-cols-2 gap-3 border-b pb-3">
          <div>
            <h2 class="font-semibold text-gray-700 mb-1 text-sm">Shipping Address</h2>
            <p class="text-gray-700 leading-relaxed text-xs">
              <%= order.shippingAddress.name %> <br>
                <%= order.shippingAddress.city %>, <%= order.shippingAddress.state %><br>
                    +91 <%= order.shippingAddress.phone %>
            </p>
          </div>
          <div>
            <h2 class="font-semibold text-gray-700 mb-1 text-sm">Payment Method</h2>
            <p class="text-gray-700 leading-relaxed text-xs">
              <%= order.paymentMethod %><br>
                Paid on: May 23, 2025
            </p>
          </div>
        </div>

        <!-- Product List -->
        <div class="space-y-4">
          <% order.items.forEach(item=> { %>
            <div class="rounded-xl p-4 shadow-sm hover:shadow-md transition border-l-4
        <% if(item.status === 'Delivered') { %> border-green-500 bg-green-50
         <% } else if(item.status === 'Pending') { %> border-yellow-500 bg-yellow-50
        <% } else if(item.status === 'Shipped') { %> border-gray-500 bg-gray-50
              <% } else if(item.status === 'Out for Delivery') { %> border-yellow-500 bg-yellow-50
        <% } else if(item.status === 'Cancelled') { %> border-red-500 bg-red-50
        <% } else if(item.status === 'Returned') { %> border-yellow-500 bg-yellow-50
        <% } else { %> border-blue-500 bg-blue-50 <% } %>">

              <div class="flex justify-between items-start gap-4">
                <!-- Product Image & Info -->
                <div class="flex gap-4">
                  <img src="<%= item.productId.media.coverImage %>" alt="<%= item.productId.name %>"
                    class="w-24 h-24 object-cover rounded-lg border" />

                  <div class="space-y-1">
                    <h3 class="font-semibold text-gray-900 text-base">
                      <%= item.productId.name %>
                    </h3>
                    <p class="text-sm text-gray-600">Qty: <%= item.quantity %>
                    </p>
                    <p class="text-sm text-gray-600">Price: ₹<%= item.productId.price.toLocaleString('en-IN') %>
                    </p>

                    <!-- Status Label -->
                    <span class="inline-block px-3 py-1 text-xs font-medium rounded-full 
              <% if(item.status === 'Delivered') { %> bg-green-100 text-green-700 
              <% } else if(item.status === 'Cancelled') { %> bg-red-100 text-red-700 
              <% } else if(item.status === 'Returned') { %> bg-yellow-100 text-yellow-700 
              <% } else { %> bg-blue-100 text-blue-700 <% } %>">
                      <%= item.status %>
                    </span>
                  </div>
                </div>

                <!-- Action Button -->
                <!-- Action Button -->
                <div class="flex items-center">
                  <% if (item.status==='Cancelled' ) { %>
                    <button
                      class="border border-red-300 text-red-400 bg-red-100 cursor-not-allowed px-4 py-2 rounded text-xs opacity-50"
                      disabled>
                      Order Cancelled
                    </button>
                    <% } else if (item.status==='Delivered' ) { %>
                      <button type="submit" onclick="handleOrderAction('<%= order._id %>', '<%= item._id %>', 'return')"
                        class="inline-flex items-center gap-1 border-2 border-red-500 text-red-600 bg-white hover:bg-red-500 hover:text-white font-medium px-3 py-1.5 rounded-md text-sm shadow-sm transition-colors duration-200">
                        <svg class="w-4 h-4" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24">
                          <path stroke-linecap="round" stroke-linejoin="round"
                            d="M4 4v6h6M20 20v-6h-6M4 10c0-3.31 2.69-6 6-6h4a6 6 0 016 6v4a6 6 0 01-6 6H8a6 6 0 01-6-6v-2" />
                        </svg>
                        Return
                      </button>
                      <% } else if (['Shipped', 'Out for Delivery' ].includes(item.status)) { %>
                        <span
                          class="text-blue-600 text-xs font-medium px-2 py-1 rounded bg-blue-50 border border-blue-200">
                          Your order is being processed (<%= item.status %>)
                        </span>
                        <% } else if (!['Returned'].includes(item.status)) { %>
                          <button onclick="handleOrderAction('<%= order._id %>', '<%= item._id %>', 'cancel')"
                            class="border border-red-500 text-red-500 hover:bg-red-500 hover:text-white px-4 py-2 rounded text-xs transition-colors duration-200">
                            Cancel Order
                          </button>
                          <% } %>
                </div>

              </div>
            </div>
            <% }) %>
        </div>


        <!-- Total -->
        <div class="flex justify-between items-center border-t pt-3">
          <span class="text-base font-semibold text-gray-800">Total</span>
          <span class="text-base font-bold text-green-600">₹ <%= order.totalAmount.toLocaleString('en-IN') %>
          </span>
        </div>

        <!-- Bottom Buttons -->
        <div class="flex justify-end gap-2 pt-4">
          <a href="/orderDetails">
            <button class="bg-red-500 hover:bg-red-600 text-white px-3 py-1.5 rounded text-xs">Go
              Back</button>
          </a>

          <button class="bg-blue-600 hover:bg-blue-700 text-white px-3 py-1.5 rounded text-xs">Invoice</button>
        </div>

      </div>
    </main>

    <!-- Return Reason Modal -->
<div id="returnReasonModel" class="fixed inset-0 bg-black bg-opacity-40 flex items-center justify-center z-50 hidden">
  <div class="bg-white rounded-lg p-6 w-full max-w-xs">
    <h2 class="text-lg font-semibold mb-2">Return Reason</h2>
    <textarea id="returnReasonInput" class="w-full border rounded p-2 mb-4" rows="3" placeholder="Enter reason for return"></textarea>
    <div class="flex justify-end gap-2">
      <button onclick="closeReturnModal()" class="px-3 py-1 rounded bg-gray-200 hover:bg-gray-300 text-gray-700">Cancel</button>
      <button onclick="submitReturnReason()" class="px-3 py-1 rounded bg-blue-600 hover:bg-blue-700 text-white">Submit</button>
    </div>
  </div>
</div>



<script>



  let pendingReturn = {}; 

   function handleOrderAction(orderId, itemId, action) {

    console.log(action)
    
      console.log('logging', orderId)
      // const url = action === 'return' ? '/return-item' : '/cancel-item';
      if(action==='return'){
        console.log('loggedd')
        pendingReturn = {orderId,itemId};
        document.getElementById('returnReasonModel').classList.remove('hidden');
      }else{
        //for cancel , do as before
      }

    }

    function closeReturnModal(){
      document.getElementById('returnReasonModal').classList.add('hidden');
      document.getElementById('returnReasonInput').value = '';
      pendingReturn = {};
    }

    async function submitReturnReason(){
     const reason = document.getElementById('returnReasonInput').value.trim();

     if(!reason){
      alert('Please enter a reason for a return ');
      return
     }

      await sendOrderAction(pendingReturn.orderId, pendingReturn.itemId, 'return', reason);
         closeReturnModal();
    }
    

    async function sendOrderAction(orderId,itemId,action,reason='') {

      try{

        const url = action === 'return' ? '/return-item' : '/cancel-item';

        const response = await fetch(url, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ orderId, itemId,reason})
      });

      const data = await response.json();
      if(data.success){
        location.reload();
      }else{
        alert(data.error || 'Action Failed');
      }

      }catch(error){
        alert('Network error');
      }
      
    }


  //     const data = await response.json();
  //     if (data.success) {
  //       location.reload();
  //     } else {
  //       alert(data.error || 'Action Failed');
  //     }
  //   } catch (error) {
  //     alert('Network error');
  //   }
  // }


</script>

</body>




</html>