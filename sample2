// Edit profile form submission
  editForm.addEventListener("submit", async function (e) {
    const newEmail = emailInput.value.trim();
    document.getElementById("emailError").textContent = "";

    if (newEmail !== originalEmail) {
      e.preventDefault();
      if (!newEmail) {
        document.getElementById("emailError").textContent = "Email is required.";
        return;
      }
      // Check with server if email is valid and send OTP
      try {
        const res = await fetch("/send-verification-code", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ email: newEmail })
        });
        const data = await res.json();
        if (!res.ok || !data.success) {
          document.getElementById("emailError").textContent = data.message || "Failed to send verification code.";
          return;
        }
        hiddenNewEmail.value = newEmail;
        closeModal();
        emailVerificationModal.classList.remove("hidden");
        verificationFeedback.textContent = "OTP sent successfully!";
        verificationFeedback.className = "text-center text-sm font-medium mb-2 text-green-600";
      } catch (err) {
        document.getElementById("emailError").textContent = "Something went wrong. Try again.";
      }
    }
  });

  // Separate "Verify Email" button
  editEmailBtn.addEventListener("click", async () => {
    const newEmail = emailInput.value.trim();
    document.getElementById("emailError").textContent = "";

    if (!newEmail) {
      document.getElementById("emailError").textContent = "Email is required.";
      return;
    }
    if (newEmail === originalEmail) return;

    // Check with server if email is valid and send OTP
    try {
      const res = await fetch("/send-verification-code", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ email: newEmail })
      });
      const data = await res.json();
      if (!res.ok || !data.success) {
        document.getElementById("emailError").textContent = data.message || "Failed to send verification code.";
        return;
      }
      hiddenNewEmail.value = newEmail;
      closeModal();
      emailVerificationModal.classList.remove("hidden");
      verificationFeedback.textContent = "OTP sent successfully!";
      verificationFeedback.className = "text-center text-sm font-medium mb-2 text-green-600";
    } catch (err) {
      document.getElementById("emailError").textContent = "Something went wrong. Try again.";
    }
  });

  // OTP verification
  verificationForm.addEventListener("submit", async function (e) {
    e.preventDefault();
    const email = hiddenNewEmail.value;
    const verificationCode = this.querySelector('input[name="verificationCode"]').value.trim();

    try {
      const res = await fetch("/verify-email", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ email, verificationCode })
      });

      const data = await res.json();
      console.log("Verification Response:", data);

      if (res.ok && data.success) {
        verificationFeedback.textContent = "Email verified successfully!";
     
        
        verificationFeedback.classList.add("text-green-600");

        

        setTimeout(() => {
          emailVerificationModal.classList.add("hidden");
          editForm.submit(); // Resubmit profile form
        }, 1000);
      } else {
        verificationFeedback.textContent = data.message || "Verification failed.";
        verificationFeedback.classList.add("text-red-600");
      }
    } catch (err) {
      console.error("Verification error:", err);
      verificationFeedback.textContent = "An error occurred. Please try again.";
      verificationFeedback.classList.add("text-red-600");
    }
  });

  // Auto-hide flash messages
  setTimeout(() => {
    const flash = document.getElementById('flash-message');
    if (flash) {
      flash.classList.add('opacity-0');
      setTimeout(() => flash.remove(), 500);
    }
  }, 3000);


document.getElementById('edit-form').addEventListener('submit',async function(e){
  e.preventDefault();

  // clear previous error messages

  document.getElementById('profile-error-name').innerText = '';
  document.getElementById('profile-error-phone').innerText = '';


  const form = e.target;
  const formData = new FormData(form);

  try{
    console.log('Submitting profile update...');
    
     const response = await fetch('/edit-profile',{
      method:'POST',
      body:formData
     });

     const result = await response.json();

     if(response.ok){
      Swal.fire({
        icon: 'success',
        title: 'Profile Updated',
        text: result.message,
        confirmButtonText: 'OK'
      }).then(() => {
        window.location.reload();
      });
    }else{
      if(result.errors.name){
         document.getElementById('profile-error-name').innerText = result.errors.name;
      }
    }
  }catch(error){
    console.error('Error updating profile:', error);
    Swal.fire({
      icon: 'error',
      title: 'Update Failed',
      text: 'An error occurred while updating your profile. Please try again later.',
      confirmButtonText: 'OK'
    });
    
  }
})